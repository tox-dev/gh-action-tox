---
name: tox
description: Run tox
author: Sviatoslav Sydorenko <wk+tox-dev/gh-action-tox@sydorenko.org.ua>

branding:
  icon: code
  color: blue

inputs:
  target:
    default:
    description: Regex to filter the tox envs, required
    required: false

  python-version:
    default: >-
      3.10
    description: Python version to use as the current tox runtime
    required: true

  version:
    default: tox
    description: tox with version spec for pip
    required: false

outputs:
  matrix:
    value: ${{ steps.tox-matrix.outputs.matrix }}
  json-results:
    value: ${{ steps.json-results.outputs.json-results }}

runs:
  using: composite
  steps:
  # TODO: integrate deadsnakes?
  - name: Set the active Python interpeter to ${{ inputs.python-version }}
    uses: actions/setup-python@v2
    with:
      python-version: ${{ inputs.python-version }}
  # TODO: integrate bindep?
  - name: Install packaging tools
    run: |
      echo '::group::Preparing the outer Python env for tox'
      python -m pip install --user -U wheel
      python -m pip install --user -U pip-with-requires-python setuptools
      python -m pip install --user -U virtualenv
      echo '::endgroup::'
    shell: bash
  - name: Install tox
    run: |
      echo '::group::Installing tox: ${{ inputs.version }}'
      python -m pip install --user -U '${{ inputs.version }}'
      echo '::endgroup::'
    shell: bash
  - uses: actions/checkout@v2
  - name: Prepare tox env '${{ inputs.target }}'
    run: >
      echo '::group::Preparing tox environment'


      python -m
      tox
      --parallel auto
      --parallel-live
      -vv
      --notest


      echo '::endgroup::'
    shell: bash
    env:
      PY_COLORS: 1
      TOX_PARALLEL_NO_SPINNER: 1
      TOXENV: ${{ inputs.target }}
  - name: Prepare tox results directory for '${{ inputs.target }}'
    id: tox-results
    run: >
      echo '::group::Preparing tox results storage...'


      TMPDIR=$(
        mktemp -d --suffix=-results "${GITHUB_ACTION_PATH}/tox-XXXXX"
      )
      && echo "::set-output name=results-dir::${TMPDIR}"


      JSON_RESULTS_FILE="${TMPDIR}/.tox-run-results.json"
      && echo "::set-output name=results-file::${JSON_RESULTS_FILE}"


      echo '::endgroup::'
    shell: bash
  - name: Run tox env '${{ inputs.target }}'
    run: >
      echo '::group::Executing tox environment commands'


      python -m
      tox
      --parallel auto
      --parallel-live
      -vv
      --result-json '${{ steps.tox-results.outputs.results-file }}'


      echo '::endgroup::'
    shell: bash
    env:
      PY_COLORS: 1
      TOX_PARALLEL_NO_SPINNER: 1
      TOXENV: ${{ inputs.target }}
  - uses: actions/setup-python@v2
    if: always()
    with:
      python-version: '3.10'
  - name: Save JSON results
    if: always()
    id: json-results
    run: |
      import json
      from pathlib import Path

      print('::group::Saving json results...')

      results_file = Path('${{ steps.tox-results.outputs.results-file }}')
      tox_results = json.loads(results_file.read_text())
      compact_tox_results = json.dumps(tox_results, indent=None)

      print(f'::set-output name=json-results::{compact_tox_results}')

      print('::endgroup::')
    shell: python
    # TODO: move clean-up to a subaction?
    # Ref: https://github.com/actions/runner/issues/1478#issuecomment-975703207
  - name: >-
      Clean-up the results directory at ${{ steps.tox-results.outputs.results-dir }}
    if: always()
    run: |
      from shutil import rmtree
      from pathlib import Path

      results_dir = Path('${{ steps.tox-results.outputs.results-dir }}')
      group_name = f'Cleaning up the `{results_dir!s}` results directory...'

      print(f'::group::{group_name}')
      try:
          rmtree(results_dir)
      except:
          print('‚ùå Failure :(')
      else:
          print('üî• Success!')
      finally:
          print('::endgroup::')
    shell: python
  - name: Log results
    if: always()
    env:
      PYTHONPATH: ${{ github.action_path }}/src
    run: |
      python -m inspect_tox_results \
      "$(cat << EOM
        ${{ steps.json-results.outputs.json-results }}
      EOM
      )" \
      "$(cat << EOM
        ${{ matrix.toxenv }}
      EOM
      )"
    shell: bash
  - name: Reset the active Python interpeter to ${{ inputs.python-version }}
    uses: actions/setup-python@v2
    with:
      python-version: ${{ inputs.python-version }}


  # Global env seems to only be supported in docker actions but not composite
  # env:
  #   PY_COLORS: 1
  #   TOX_PARALLEL_NO_SPINNER: 1
...
