---
name: tox
description: Run tox
author: Sviatoslav Sydorenko <wk+tox-dev/gh-action-tox@sydorenko.org.ua>

branding:
  icon: code
  color: blue

inputs:
  target:
    default:
    description: Regex to filter the tox envs, required
    required: false

  min-python:
    default: 'None'
    description: Minimum supported Python version (quote as a string!)
    required: false
  max-python:
    default: 'None'
    description: Maximum supported Python version (quote as a string!)
    required: false

  version:
    default: tox
    description: tox with version spec for pip
    required: false

outputs:
  matrix:
    value: ${{ steps.tox-matrix.outputs.matrix }}
  json-results:
    value: ${{ steps.tox-results.outputs.json-results }}

runs:
  using: composite
  steps:
  - name: Install packaging tools
    run: |
      echo '::group::Preparing the outer Python env for tox'
      python -m pip install --user -U wheel
      python -m pip install --user -U pip-with-requires-python setuptools
      python -m pip install --user -U virtualenv
      echo '::endgroup::'
    shell: bash
  - name: Install tox
    run: |
      echo '::group::Installing tox: ${{ inputs.version }}'
      python -m pip install --user -U '${{ inputs.version }}'
      echo '::endgroup::'
    shell: bash
  - name: Prepare tox env '${{ inputs.target }}'
    run: >
      echo '::group::Preparing tox environment'


      python -m
      tox
      --parallel auto
      --parallel-live
      -vv
      --notest


      echo '::endgroup::'
    shell: bash
    env:
      PY_COLORS: 1
      TOX_PARALLEL_NO_SPINNER: 1
      TOXENV: ${{ inputs.target }}
  - name: Run tox env '${{ inputs.target }}'
    id: tox-results
    run: |
      echo '::group::Executing tox environment commands'

      function set_out() {
          echo Saving json results...

          # NOTE: `json.tool` does not work because old pythons have no compact
          # cat "${JSON_RESULTS_FILE}" | python -m json.tool --compact
          JSON_RESULTS="$(awk -v RS= '{$1=$1}1' "${JSON_RESULTS_FILE}")" && \
          echo "::set-output name=json-results::${JSON_RESULTS}"

          PYTHONPATH="${GITHUB_ACTION_PATH}" python -m \
            inspect_tox_results "${JSON_RESULTS_FILE}" '${{ inputs.target }}'

          rm -rfv "${TMPDIR}"

          echo '::endgroup::'
      }

      TMPDIR=$(mktemp -d --suffix=-results tox-XXXXX)

      JSON_RESULTS_FILE="${TMPDIR}/.tox-run-results.json" && \
        echo "::set-output name=results-file::${JSON_RESULTS_FILE}"

      trap set_out EXIT QUIT TERM INT

      python -m \
        tox \
        --parallel auto \
        --parallel-live \
        -vv \
        --result-json "${JSON_RESULTS_FILE}"
    shell: bash
    env:
      PY_COLORS: 1
      TOX_PARALLEL_NO_SPINNER: 1
      TOXENV: ${{ inputs.target }}


  # Global env seems to only be supported in docker actions but not composite
  # env:
  #   PY_COLORS: 1
  #   TOX_PARALLEL_NO_SPINNER: 1
...
