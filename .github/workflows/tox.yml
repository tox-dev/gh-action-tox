---

name: tox

on:
  workflow_call:
    inputs:

      check-job-name:
        default: âœ… check-tox
        description: >-
          A custom job name to use in branch protection,
          defaults to 'check-tox'
        required: false
        type: string

      tox-job-names-prefix:
        default: >-
          ðŸ§ª tox:
        description: >-
          A custom tox matix job names prefix,
          defaults to 'ðŸ§ª tox:'
        required: false
        type: string

      target:
        default:
        description: Regex to filter the tox envs
        required: false
        type: string

      min-python:
        default: 'None'
        description: Minimum supported Python version (quote as a string!)
        required: false
        type: string
      max-python:
        default: 'None'
        description: Maximum supported Python version (quote as a string!)
        required: false
        type: string

      version:
        default: tox
        description: tox with version spec for pip
        required: false
        type: string

    secrets: {}

jobs:

  make-tox-env-matrix:
    name: >-
      ðŸ”Ž tox: discover envs

    outputs:
      matrix: ${{ steps.discovered-tox.outputs.matrix }}

    runs-on: Ubuntu-latest

    steps:
    # NOTE: Check out the caller repository under $GITHUB_WORKSPACE,
    # NOTE: so the job can access it.
    - uses: actions/checkout@v2

    - name: ðŸ”Ž Produce tox environment job matrix for GHA
      uses: tox-dev/gh-action-tox/matrix@experiments/composite-action
      id: discovered-tox

    - name: Log the discovered matrix
      run: echo '${{ steps.discovered-tox.outputs.matrix }}'


  run-tox:
    name: >-
      ${{ inputs.tox-job-names-prefix }}
      ${{ matrix.toxenv }}

    needs:
    - make-tox-env-matrix

    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJSON(needs.make-tox-env-matrix.outputs.matrix) }}

    steps:
    - name: >-
        ðŸ§ª Run tox: ${{ matrix.toxenv }}
      uses: tox-dev/gh-action-tox@experiments/composite-action
      with:
        python-version: ${{ matrix.python-version }}
        target: ${{ matrix.toxenv }}
      id: tox
    - uses: actions/setup-python@v2
      if: always()
      with:
        python-version: >-
          3.10
    - name: j res
      if: always()
      run: echo '${{ steps.tox.outputs.json-results }}' | python3.10 -m json.tool


  check-tox:  # This job does nothing and is only used for the branch protection
    if: always()

    name: ${{ inputs.check-job-name }}

    needs:
    - run-tox

    runs-on: Ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

...
