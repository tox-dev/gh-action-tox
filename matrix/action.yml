---
name: tox-matrix-discovery
description: >-
  Discover tox-managed env matrix and output it as GHA-compatible JSON.
author: >-
  Sviatoslav Sydorenko <wk+~gh/tox-dev/gh-action-tox@sydorenko.org.ua>

branding:
  icon: code
  color: blue

inputs:
  target:
    default:
    description: Regex to filter the tox envs
    required: false
  workflow-artifact-name:
    default:
    description: >-
      If set, is used the produced dists are made accessible to the
      later jobs under this name (defaults to unset)
    required: false
  source-tarball-name:
    default: >-
      *.tar.gz
    description: >-
      A glob for the built source distribution in the artifact
      to retrieve the project from (defaults to `*.tar.gz`)
    required: false

  min-python:
    default:
    description: Minimum supported Python version (quote as a string!)
    required: false
  max-python:
    default:
    description: Maximum supported Python version (quote as a string!)
    required: false

  version:
    default: tox
    description: tox with version spec for pip
    required: false

outputs:
  matrix:
    value: ${{ steps.tox-matrix.outputs.matrix }}

runs:
  using: composite
  steps:
  - uses: actions/setup-python@v2
    with:
      python-version: >-
        3.10
  - name: Install packaging tools
    run: |
      echo '::group::Preparing the outer Python env for tox'
      python -m pip install --user -U wheel
      python -m pip install --user -U pip-with-requires-python setuptools
      python -m pip install --user -U virtualenv
      echo '::endgroup::'
    shell: bash
  - name: Install tox
    run: |
      echo '::group::Installing tox: ${{ inputs.version }}'
      python -m pip install --user -U '${{ inputs.version }}'
      echo '::endgroup::'
    shell: bash

  - name: Retrieve the project source from the repository
    if: >-
      !inputs.workflow-artifact-name
    uses: actions/checkout@v2
  - name: Retrieve the project source from an sdist inside the GHA artifact
    if: inputs.workflow-artifact-name
    uses: re-actors/checkout-python-sdist@main
    with:
      source-tarball-name: ${{ inputs.source-tarball-name }}
      workflow-artifact-name: ${{ inputs.workflow-artifact-name }}

  - name: Generate the matrix
    id: tox-matrix
    env:
      PYTHONPATH: ${{ github.action_path }}/src
      PY_COLORS: 1
      TOX_PARALLEL_NO_SPINNER: 1
    run: >-
      python -m generate_tox_matrix
      '${{ inputs.target }}'
      '${{ inputs.min-python }}'
      '${{ inputs.max-python }}'
    shell: bash
...
